services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: medical_evaluation_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
      POSTGRES_DB: medical_evaluation
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - medical_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medical_evaluation_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-changeme123}@postgres:5432/medical_evaluation?schema=public
      JWT_SECRET: ${JWT_SECRET:-your-very-secure-secret-key-change-this-in-production}
      PORT: 5000
      ALLOWED_ORIGINS: http://localhost:8080,http://localhost:3000
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - medical_network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medical_evaluation_frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - medical_network

volumes:
  postgres_data:
    driver: local

networks:
  medical_network:
    driver: bridge
